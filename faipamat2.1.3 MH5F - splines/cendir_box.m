%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function[d2] = cendir_box(B,gt,gradg,lvlb,lvub,lambda,omegaI2,...
                      omegaE2,neq,nvar,nbind,lenvlb,lenvub,...
                      isolver,errcg1,errcg2);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%         
%
%   FAIPAMAT 2.0 - 23/09/1999
% 
%         
% COMPUTES THE CENTERING DIRECTION "d2", WHEN THE BOX CONSTRAINTS ARE
%
% REDUCED         

ntbind=neq+nbind+lenvlb+lenvub;
nbox=lenvlb+lenvub;


[matbox,vecbox]=redbox(nvar,nbind,lambda,[omegaI2;zeros(nbox,1)],...
                       gt(neq+nbind+1:neq+nbind+lenvlb),...
                  gt(neq+nbind+lenvlb+1:ntbind),lenvlb,lenvub,lvlb,lvub);
           
B = B - diag(matbox);


% Computing d2

if isolver == 1

   % By solving the system in (d,lambda,mu):
       
   d2 = [B gradg ; ...  
         gradg(:,1:neq)' zeros(neq,ntbind-nbox) ; ...
         diag(lambda(1:nbind))*gradg(:,neq+1:neq+nbind)'...
         zeros(nbind, neq) diag(gt(neq+1:ntbind-nbox))] ...
        \[ vecbox;-omegaE2;...
         -diag(lambda(1:nbind))*omegaI2];        
                          
   d2 = d2(1:nvar,1);

elseif isolver == 2

  % By solving the nonsymmetric system in (lambda,mu)
  
   mataux2 = B\gradg;
        
   mataux3 = [(diag(lambda(1:nbind))*gradg(:,neq+1:neq+nbind)'*...
               mataux2(:,neq+1:neq+nbind) -diag(gt(neq+1:neq+nbind))) ...
               diag(lambda(1:nbind))*gradg(:,neq+1:neq+nbind)'*...
               mataux2(:,1:neq); ...
               gradg(:,1:neq)'*mataux2(:,neq+1:neq+nbind) ...
               gradg(:,1:neq)'*mataux2(:,1:neq)]...
              \[diag(lambda(1:nbind))*mataux2(:,neq+1:neq+nbind)'*vecbox + ...
                diag(lambda(1:nbind))*omegaI2(1:nbind);...
                mataux2(:,1:neq)'*vecbox+omegaE2];
          
   lambda2 = mataux3(1:nbind,1);
   mu2 = mataux3(nbind+1:nbind+neq,1);          
   
   clear mataux2    
   clear mataux3
   
   d2 = - B\(-vecbox + gradg(:,neq+1:neq+nbind)*lambda2 ...
            + gradg(:,1:neq)*mu2);
                           
elseif isolver == 3

 % By solving the symmetric system in (lambda,mu)
 
   mataux2 = B\gradg;
           
   mataux3 = [(gradg(:,neq+1:neq+nbind)'*mataux2(:,neq+1:neq+nbind) ...
              -diag(gt(neq+1:neq+nbind)./lambda(1:nbind))) ...
               gradg(:,neq+1:neq+nbind)'*mataux2(:,1:neq); ...
               gradg(:,1:neq)'*mataux2(:,neq+1:neq+nbind) ...
               gradg(:,1:neq)'*mataux2(:,1:neq)]...
             \[mataux2(:,neq+1:neq+nbind)'*vecbox + ...
               omegaI2(1:nbind); mataux2(:,1:neq)'*vecbox+omegaE2];             
                      
   lambda2 = mataux3(1:nbind,1);
   mu2 = mataux3(nbind+1:nbind+neq,1);    

   clear mataux2    
   clear mataux3
   
   d2 = - B\(-vecbox + gradg(:,neq+1:neq+nbind)*lambda2 ...
            + gradg(:,1:neq)*mu2);
      
elseif isolver == 4

  % By eliminating lambda and solving a system in d0 and mu 
  
    d2 = [(B - gradg(:,neq+1:neq+nbind)*...                                               
                         diag(lambda(1:nbind)./gt(neq+1:neq+nbind))*...
                         gradg(:,neq+1:neq+nbind)') ...
              gradg(:,1:neq); gradg(:,1:neq)' zeros(neq,neq)]...
         \[(gradg(:,neq+1:neq+nbind)*...
          diag(lambda(1:nbind)./gt(neq+1:neq+nbind))*omegaI2+vecbox);...
           -omegaE2];
                         
    d2 = d2(1:nvar,1);
end
